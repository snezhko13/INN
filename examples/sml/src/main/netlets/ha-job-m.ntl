#!/usr/bin/env nsh
/*
 * Copyright to the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@Codebase(group='org.sorcer', module='sml', version='${sorcer.version}', classifier='dl')
import sorcer.arithmetic.provider.Adder
import sorcer.arithmetic.provider.Multiplier
import sorcer.arithmetic.provider.Subtractor

Task t3 = task("t3", sig("subtract", Subtractor.class),
        context("subtract", inEnt("arg/x1"), inVal("arg/x2"),
                outVal("result/y")), strategy(Monitor.YES));

Task t4 = task("t4", sig("multiply", Multiplier.class),
        context("multiply", inVal("arg/x1", 10.0d), inVal("arg/x2", 50.0d),
                outVal("result/y")), strategy(Monitor.YES));

Task t5 = task("t5", sig("add", Adder.class),
        context("add", inEnt("arg/x1", 20.0d), inEnt("arg/x2", 80.0d),
                outVal("result/y")), strategy(Monitor.YES));

// Service Composition j1(j2(t4(x1, x2), t5(x1, x2)), t3(x1, x2))
job("j1",
        job("j2", t4, t5, strategy(Monitor.YES)),
        t3,
        pipe(outPoint(t4, "result/y"), inPoint(t3, "arg/x1")),
        pipe(outPoint(t5, "result/y"), inPoint(t3, "arg/x2")),
        strategy(Monitor.YES))