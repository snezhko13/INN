/* 
* Provider dependency injections
* It uses component entry names defined in the SORCER provider
* as defined by sorcer.core.provider.SorcerProvider.
*/
import java.util.logging.*;
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.arithmetic.provider.*;

sorcer.core.provider.ServiceExerter {
        /* service provider generic properties */
		name = "Arithmetic";
		description = "Arithmetic - bean provider";
		location = "AFRL/WPAFB";
		publishedInterfaces = new Class[] { sorcer.arithmetic.provider.Arithmetic.class,
			sorcer.arithmetic.provider.Adder.class,
			sorcer.arithmetic.provider.Multiplier.class,
			sorcer.arithmetic.provider.Subtractor.class };

		spaceEnabled = true;
		matchInterfaceOnly = false;

		// remote logging
		remoteLogging=true;

		// persist and reuse service ID
		providerIdPersistent = false;
		
		// enable monitoring
		// monitorEnabled = true;
		
		// service beans	
		beanClasses = new Class[] { sorcer.arithmetic.provider.impl.ArithmeticImpl.class }; 
		
		iconName="sorcer.jpg";
}

/*
 * Configuration for Signature Based Provisioning
 */
sorcer.core.exertion.deployment {
    interfaces = new String[]{"sorcer.arithmetic.provider.Adder",
    						  "sorcer.arithmetic.provider.Multiplier",
    						  "sorcer.arithmetic.provider.Subtractor",
    						  "sorcer.arithmetic.provider.Arithmetic"};

    codebaseJars = new String[]{"org/sorcer/sml/${sorcer.version}/sml-${sorcer.version}-dl.jar",
                                "org/sorcer/sml/${sorcer.version}/sml-${sorcer.version}-ui.jar",
                                "sorcer-dl-${sorcer.version}.jar",
                                "jsk-dl-${river.version}.jar"};

    implJars = new String[]{"org/sorcer/sml/${sorcer.version}/sml-${sorcer.version}.jar",
                            "org/sorcer/sml/${sorcer.version}/sml-${sorcer.version}-ui.jar"};
}
	



