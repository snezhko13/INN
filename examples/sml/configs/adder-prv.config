/*
* Provider dependency injections
* It uses component entry names defined in the SORCER provider
* as defined by sorcer.core.provider.SorcerProvider.
*/
import java.util.logging.*;
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.core.provider.ui.*;
import sorcer.arithmetic.provider.*;

sorcer.core.provider.ServiceExerter {
        /* service provider deployment properties */
		name = "Adder";
		description = "Adder - bean provider";
		location = "AFRL/WPAFB";
		propertiesFile="provider.properties";
		publishedInterfaces = new Class[] { sorcer.arithmetic.provider.Adder.class };

		// add service UI
		//args = new Entry[] { ArithmeticUI.getUIDescriptor(),
			//new Comment("It uses sorcer.arithmetic.Arithmometer for bean implementation") };

		threadManagement=true;

		//discoveryEnabled = false;

		//workerTransactional = true;
		//workerCount = 100;
		spaceEnabled = true;
        osName = "Mac OS X";
        appNames = new String[] { "Astros", "Nastran" };

		// remote logging
		remoteLogging=true;

		// persist and reuse service ID
		// providerIdPersistent = false;

		// enable monitoring
		//monitorEnabled = true;

		// service beans
		beanClasses = new Class[] { sorcer.arithmetic.provider.impl.AdderImpl.class };

		iconName="sorcer.jpg";
}

sorcer.core.exertion.deployment {
    interfaces = new String[]{"sorcer.arithmetic.provider.Adder"};
    codebaseJars = new String[]{"org/sorcer/sml/${sorcer.version}/sml-${sorcer.version}-dl.jar"};
    implJars = new String[]{"org/sorcer/sml/${sorcer.version}/sml-${sorcer.version}.jar"};
}


