/* 
* Provider dependency injections
* It uses component entry names defined in the SORCER provider
* as defined by sorcer.core.provider.SorcerProvider.
*/
import java.util.logging.*;
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import java.util.logging.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.core.provider.ui.*;
import sorcer.arithmetic.*;
import sorcer.arithmetic.*;
import sorcer.arithmetic.provider.*;

sorcer.core.provider.ServiceExerter {
        /* service provider deployment properties */
		name = "Arithmetic";
		description = "Arithmetic beans provider";
		location = "AFRL/WPAFB";
		publishedInterfaces = new Class[] { 
			sorcer.arithmetic.provider.Adder.class,
			sorcer.arithmetic.provider.Multiplier.class,
			sorcer.arithmetic.provider.Subtractor.class,
			sorcer.arithmetic.provider.Divider.class };
			
		// add service UI
		args = new Entry[] { AdderImpl.getCalculatorDescriptor(),
			new Comment("It uses sorcer.arithmetic.Arithmometer for bean implementation") };
			
		spaceEnabled = true;
		matchInterfaceOnly = true;
		
		// persist and reuse service ID
		providerIdPersistent = false;
		
		// remote logging
		remoteLogging=true;

		// service beans	
		beanClasses = new Class[] { sorcer.arithmetic.provider.AdderImpl.class, 
			sorcer.arithmetic.provider.impl.SubtractorImpl.class, 
			sorcer.arithmetic.provider.impl.MultiplierImpl.class, 
			sorcer.arithmetic.provider.impl.DividerImpl.class }; 
		
		//context management for this provider
		//contextManager=new ContextManager();
		
		// provider's thread management
		threadManagement = true;
		maxThreads = 10;
		// 15 seconds
		threadTimeout = 15000;
		loadFactor = 3.0f;
		waitForResultIncrement = 0;

		iconName="sorcer.jpg";
}
	



