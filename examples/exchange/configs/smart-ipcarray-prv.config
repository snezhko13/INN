/*
 * Copyright to the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
* Provider dependency injections
* It uses component entry names defined in the SORCER provider
* as defined by sorcer.core.provider.SorcerProvider.
*
* @author Mike Sobolewski
*/
import java.util.logging.*;
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.provider.exchange.*;
import sorcer.provider.exchange.impl.*;

sorcer.core.provider.ServiceExerter {
        /* service provider deployment properties */
		name = "IpcArrayProviderImpl";
		description = "IpcArrayProviderImpl - socket IPC provider";
		location = "MSTC/AFRL";
		publishedInterfaces = new Class[] { sorcer.provider.exchange.IpcArray.class };

		// smart (fat) proxy
        // smartProxy = new sorcer.provider.exchange.impl.IpcArrayBean();
		
		iconName="sorcer.jpg";
}



	



