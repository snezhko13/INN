/* 
*  Basic SORCER startup configuration file
*/
import java.net.URL;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerDescriptorUtil;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
	// webster root directories
	sorcerLibPath 	= "${iGrid.home}${/}lib${/}sorcer${/}lib";
 	sorcerLibDlPath = "${iGrid.home}${/}lib${/}sorcer${/}lib-dl";
    jiniLibPath 	= "${iGrid.home}${/}lib${/}river${/}lib";
    jiniLibDLPath 	= "${iGrid.home}${/}lib${/}river${/}lib-dl";
    rioLibPath 		= "${iGrid.home}${/}lib${/}rio";
    deployPath 		= "${iGrid.home}${/}deploy";
    
	//port = Booter.getWebsterPort(); 
	port = 0;
	//address = Booter.getWebsterInterface();
	//startPort = Booter.getWebsterStartPort();
	//endPort = Booter.getWebsterEndPort();
	
	spacerConfig = "${iGrid.home}${/}bin${/}sorcer${/}jobber${/}configs${/}spacer-prv.config";
	jobberConfig = "${iGrid.home}${/}bin${/}sorcer${/}jobber${/}configs${/}jobber-prv.config";
	catalogerConfig = "${iGrid.home}${/}bin${/}sorcer${/}cataloger${/}configs${/}cataloger-prv.config";
    policy = "${java.security.policy}";
    
    serviceDescriptors = new ServiceDescriptor[] {
        /* SORCER Webster, set to serve up root directories */
        // (String policy, int port, String[] roots, String address, int startPort, int endPort, boolean debug)
        SorcerDescriptorUtil.getWebster(policy, port,
                                         new String[] { sorcerLibPath,
                                         			    sorcerLibDlPath,
                                         			    jiniLibDLPath,
                                                        rioLibPath,
                                                        jiniLibPath,
                                                        deployPath }),
    
       /* SORCER Job Service */
       SorcerDescriptorUtil.getJobber(policy, jobberConfig),
       
     	/* SORCER Space Service */
       SorcerDescriptorUtil.getSpacer(policy, spacerConfig),
        
       /* SORCER Catalog Service */
       SorcerDescriptorUtil.getCataloger(policy, catalogerConfig)
    
    };
}//end com.sun.jini.start
