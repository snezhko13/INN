/* 
* SORCER Spacer startup configuration file
*/
import java.net.URL;
import sorcer.provider.boot.Booter;
import sorcer.provider.boot.SorcerDescriptorUtil;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
  
	// webster root directories
	sorcerLibPath = "${iGrid.home}${/}lib${/}sorcer${/}lib";
 	sorcerLibDlPath = "${iGrid.home}${/}lib${/}sorcer${/}lib-dl";
    jiniLibPath = "${iGrid.home}${/}lib${/}river${/}lib";
    jiniLibDlPath = "${iGrid.home}${/}lib${/}river${/}lib-dl";
    rioLibPath = "${iGrid.home}${/}rio${/}lib-dl";
    groovyPath = "${iGrid.home}${/}lib${/}common${/}groovy";
    deployPath = "${iGrid.home}${/}deploy";
    
    port = 0;
	//port = Booter.getWebsterPort(); 
	//address = Booter.getWebsterInterface();
	//startPort = Booter.getWebsterStartPort();
	//endPort = Booter.getWebsterEndPort();
	
	concatenatorConfig = new String[] { "${iGrid.home}${/}bin${/}sorcer${/}rendezvous${/}configs${/}concatenator-prv.config" };
    policy = "${java.security.policy}";
   
    serviceDescriptors = new ServiceDescriptor[] {
        /* SORCER Webster, set to serve up 4 directories */
        // (String policy, int port, String[] roots, String address, int startPort, int endPort, boolean debug)
        SorcerDescriptorUtil.getWebster(policy, port,
                                         new String[] { sorcerLibPath,
                                         			    sorcerLibDlPath,
                                         			    jiniLibDlPath,
                                                        rioLibPath,
                                                        jiniLibPath,
                                                        groovyPath,
                                                        deployPath }),
    
       /* SORCER Concatenator Service */
       SorcerDescriptorUtil.getConcatenator(policy, concatenatorConfig)
    };
}//end com.sun.jini.start
