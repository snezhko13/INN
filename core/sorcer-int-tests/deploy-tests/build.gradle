/*
 * Copyright to the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

version = sorcerVersion

dependencies {
    testCompile project(":sorcer-platform")
    testCompile project(":sorcer-test")
    testCompile project(":sorcer-int-tests:sorcer-tester")
    testCompile libs.junit
    testRuntime libs.slf4j
    testRuntime libs.logback
}

def repoPath() {
    "org/sorcer/sorcer-tester/${version}"
}

def deployConfig = file("src/test/resources/deploy/configs/multiplier-prv.config")
artifacts {
    archives file: deployConfig, classifier: "deploy"
}

test {
    dependsOn([":sorcer-int-tests:sorcer-tester:install", install])
    systemProperty "sorcer.version", version
    systemProperty "java.rmi.server.codebase",
                   "${websterUrl}/${repoPath()}/sorcer-tester-${version}-dl.jar ${websterUrl}/sorcer-dl-${version}.jar ${websterUrl}/jsk-dl-${riverVersion}.jar"
    systemProperty "deploy.configs", "${project.projectDir.path}/src/test/resources/deploy/configs"
    systemProperty "build.dir", "${project.buildDir.path}"
    testLogging {
        events "passed", "skipped", "failed"/*, "standardOut"*/, "standardError"
    }
}
test.onlyIf { file("${sorcerDistHome}").exists() }