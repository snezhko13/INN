/* 
* Provider dependency injections
* It uses component entry names defined in the SORCER provider
* as defined by sorcer.core.provider.SorcerProvider.
*/
import java.util.logging.*;
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.*;
import sorcer.arithmetic.tester.*;
import sorcer.arithmetic.tester.impl.*;

sorcer.core.provider.ServiceExerter {
        /* service provider generic properties */
		name = "Arithmetic";
		description = "Arithmetic - bean provider";
		location = "AFRL/WPAFB";
		publishedInterfaces = new Class[] { sorcer.arithmetic.tester.provider.Arithmetic.class,
			sorcer.arithmetic.tester.Adder.class,
			sorcer.arithmetic.tester.Multiplier.class, 
			sorcer.arithmetic.tester.Subtractor.class };

		spaceEnabled = true;
		
		// remote logging
		remoteLogging=true;
		remoteLoggerManagerName="Logger";
		remoteLoggerLevel=Level.FINE;
		remoteLoggerName="remote.sorcer.arithmetic.tester.provider.Arithmetic";

		// local private logging available via by RemoteLogger
		remoteContextLogging = true;
		remoteProviderLogging = true;
		
		// persist and reuse service ID
		providerIdPersistent = false;
		
		// enable monitoring
		// monitorEnabled = true;
		
		// service beans	
		beanClasses = new Class[] { sorcer.arithmetic.tester.provider.impl.ArithmeticImpl.class };
		
		iconName="sorcer.jpg";
}
	
sorcer.core.exertion.deployment {
    interfaces = new String[]{"sorcer.arithmetic.tester.provider.Arithmetic",
                              "sorcer.arithmetic.tester.provider.Adder",
                              "sorcer.arithmetic.tester.provider.Multiplier",
                              "sorcer.arithmetic.tester.provider.Subtractor"};
    codebaseJars = new String[]{"ju-arithmetic-dl.jar"};
    implJars = new String[]{"ju-arithmetic-beans.jar"};
}



